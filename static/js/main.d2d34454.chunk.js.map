{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/app/food-bg.jpg","actions/index.js","components/menu-list-item/menu-list-item.js","components/menu-list-item/index.js","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.js","components/hoc/index.js","components/hoc/with-resto-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error/index.js","components/error/error.js","components/menu-list/menu-list.js","components/menu-list/index.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/app-header/index.js","components/app-header/app-header.js","components/app/index.js","components/app/app.js","reducers/index.js","store.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/resto-service.js","index.js"],"names":["module","exports","__webpack_require__","p","menuLoaded","newMenu","type","payload","menuRequested","menuError","onAddToCart","item","itemsRemove","id","successPostOrderFromCart","errorPostOrderFromCart","connect","MenuListItem","withRouter","_ref","title","price","url","category","history","categoryIcon","_getIconCategory","react_default","a","createElement","Fragment","className","src","alt","onClick","console","log","push","concat","RestoServiceContext","createContext","WithRestoService","Wrapped","props","components_resto_service_context","Consumer","RestoService","Object","assign","Spinner","Error","MenuList","_this$props","this","getMenuItem","then","res","catch","_this$props2","menuItems","loading","error","components_error","components_spinner","menuListItems","map","menuItem","components_menu_list_item","key","react_router","exact","path","render","params","match","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","Component","state","menu","actions","MainPage","components_menu_list","mapDithpetchToProps","deleteFromCart","CartTable","_ref4","items","orderPostState","isPostSuccess","success","_ref3","count","data","length","body","_ref2","postOrderFromCart","e","onPostOrder","CartPage","components_cart_table","AppHeader","total","react_router_dom","to","cartIcon","App","style","background","Background","components_app_header","component","initialState","reducer","arguments","action","objectSpread","indexA","findIndex","toConsumableArray","slice","index","store","createStore","reduser","ErrorBoundry","setState","children","baseUrl","process","_getData","_postData","fetch","ok","status","json","method","headers","Content-Type","JSON","stringify","restoService","ReactDOM","es","error_boundry","Provider","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.d2d34454.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-bg.698e5e80.jpg\";","const menuLoaded = (newMenu)=> {\r\n    return {\r\n        type: 'MENU_LOADED',\r\n        payload: newMenu\r\n    }\r\n}\r\nconst menuRequested = ()=> {\r\n    return {\r\n        type: 'MENU_REQUESTED'\r\n    }\r\n}\r\nconst menuError = ()=> {\r\n    return {\r\n        type: 'MENU_ERROR'\r\n    }\r\n}\r\nconst onAddToCart = (item)=> {\r\n    return {\r\n        type: 'ITEM_ADD',\r\n        payload: item\r\n    }\r\n}\r\nconst itemsRemove = (id)=> {\r\n    return {\r\n        type: 'ITEM_REMOVE',\r\n        payload: id\r\n    }\r\n}\r\nconst successPostOrderFromCart = ()=> {\r\n    return {\r\n        type: 'SUCCESS_POST_ORDER_FROM_CART'\r\n    }\r\n}\r\nconst errorPostOrderFromCart = ()=> {\r\n    return {\r\n        type: 'ERROR_POST_ORDER_FROM_CART'\r\n    }\r\n}\r\n\r\nexport {\r\n    menuLoaded,\r\n    menuRequested,\r\n    menuError,\r\n    onAddToCart,\r\n    itemsRemove as deleteFromCart,\r\n    successPostOrderFromCart,\r\n    errorPostOrderFromCart\r\n}","import React from 'react';\nimport './menu-list-item.scss';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport{onAddToCart} from '../../actions';\n\n\nconst MenuListItem = ({title, price, url, category,id,history,onAddToCart}) => {\n    const categoryIcon = _getIconCategory(category);\n    \n    return (\n        <>\n            <li  className=\"menu__item\">\n                <div className=\"menu__title\">{title}</div>\n                <img className=\"menu__img\" src={url} alt=\"Cesar salad\"></img>\n                <div className=\"menu__category\">Category: <span>{category}</span></div>\n                <div className=\"menu__price\">Price: <span>{price}</span></div>\n                \n                <div className=\"menu__wrap\">\n                    <button onClick={()=>onAddToCart({title,id,price,url})} className=\"menu__btn\">Add to cart</button>\n                    <button onClick={()=>{\n                        console.log(id)\n                        history.push(`/menu/${id}`)}} className=\"menu__btn\">Detailed</button>\n\n                    <img className=\"menu__icon\" src={categoryIcon} alt=\"icon\"></img>\n                </div>\n            </li>\n        </>\n    )\n}\n\nfunction _getIconCategory(category){\n    switch(category){\n        case \"pizza\":\n            return'https://www.flaticon.com/svg/static/icons/svg/1404/1404945.svg'\n            \n        case \"salads\":\n            return'https://www.flaticon.com/svg/static/icons/svg/2674/2674069.svg'\n            \n        case \"meat\":\n            return'https://www.flaticon.com/svg/static/icons/svg/3076/3076125.svg'\n            \n        default:\n            return'';\n    }\n}\n\nexport default connect(null,{onAddToCart})(withRouter(MenuListItem));","import MenuListItem from './menu-list-item';\nexport default MenuListItem;","import RestoServiceContext from './resto-service-context';\n\nexport default RestoServiceContext;","import {createContext} from 'react';\r\n\r\nconst RestoServiceContext = createContext();\r\n\r\nexport default RestoServiceContext;","import WithRestoService from './with-resto-service';\n\nexport default WithRestoService;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context';\n\nconst WithRestoService = () => (Wrapped) => {\n    return (props) => {\n        return  (\n            <RestoServiceContext.Consumer>\n              {(RestoService)=> {\n                  return <Wrapped {...props} RestoService={RestoService}/>;\n              }}  \n            </RestoServiceContext.Consumer>\n        )\n    }\n};\n\nexport default WithRestoService;","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\n\nconst Spinner = () => {\n    return <div className=\"spinner\">loading...</div>\n}\n\nexport default Spinner;","import Error from './error';\n\nexport default Error;","import React from 'react';\n\nimport  './error.scss'\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n}\n\nexport default Error;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport MenuListItem from '../menu-list-item';\nimport WithRestoService from '../hoc';\nimport Spinner from '../spinner';\nimport Error from '../error';\nimport {Route, Switch} from 'react-router-dom'\n\n\n\n\n\nimport './menu-list.scss';\n\nclass MenuList extends Component {\n\n    componentDidMount(){\n        const {menuLoaded, menuRequested, menuError} =this.props\n        menuRequested();\n        this.props.RestoService.getMenuItem().then(res=>{\n            menuLoaded(res);\n        }).catch(()=>{\n            menuError()\n        })\n    }\n\n\n    \n    render() {\n        const {menuItems, loading, error}= this.props\n        if(error){\n            \n            return <Error/>\n        }\n        if(loading) {\n            return <Spinner/>\n        }\n        const menuListItems = menuItems.map(menuItem=>{\n            return <MenuListItem key={menuItem.id} {...menuItem}/>\n        });\n        \n        return (\n            <ul className=\"menu__list\">\n                <Switch>\n                    <Route exact path={'/menu/:id'} render={({match:{params}})=>{\n                    \n                                for (let menuItem of menuItems) {\n                                    if (menuItem.id=== + params.id){\n                                        return <MenuListItem key={menuItem.id} {...menuItem}/>\n                                    }\n                                }\n                                return menuListItems;\n                        }}/>\n                    <Route  exact render={()=>menuListItems}/>\n                    \n                </Switch>\n                \n            \n\n            </ul>\n        )\n    }\n};\n\nconst mapStateToProps = (state)=>{\n    return {\n        menuItems: state.menu,\n        loading: state.loading,\n        error: state.error\n    }\n}\n\n\nexport default connect(mapStateToProps, actions)(WithRestoService()(MenuList));","import MenuList from './menu-list';\nexport default MenuList;","import React from 'react';\nimport MenuList from '../menu-list';\n\nconst MainPage = () => {\n    return (\n        <MenuList/>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport './cart-table.scss';\nimport {connect} from 'react-redux';\nimport {deleteFromCart,\n     successPostOrderFromCart,\n     errorPostOrderFromCart} from '../../actions';\nimport WithRestoService from '../hoc';\nimport Error from '../error';\n\nconst CartTable = ({items, deleteFromCart,RestoService,successPostOrderFromCart,errorPostOrderFromCart,orderPostState}) => {\n\n    function onPostOrder(data){\n        if(data.length>0){\n            const body = data.map(({title, price, count})=>({title, price, count}))\n            RestoService.postOrderFromCart(body).then((res)=>successPostOrderFromCart())\n            .catch((e)=>errorPostOrderFromCart())\n        }\n        \n    }\n    if( orderPostState==='error'){\n        return <Error/>\n    }\n    const isPostSuccess= orderPostState==='success'\n    const success = <h1>ordered</h1>\n    return (\n        <div>\n            <div className=\"cart__title\">Ваш заказ:</div>\n            <div className=\"cart__list\">\n                {isPostSuccess?success:items.map(({title, url, price, id, count })=>{\n                    return(\n                        <div key={id} className=\"cart__item\">\n                            <img src={url} className=\"cart__item-img\" alt=\"Cesar salad\"></img>\n                            <div className=\"cart__item-title\">{title}</div>\n                            <div className=\"cart__item-wrap\">\n                                <span>{price}$</span>\n                                <span>x{count}</span>\n                            </div>\n                            \n\n                            <div onClick={()=>deleteFromCart(id)} className=\"cart__close\">&times;</div>\n                        </div>\n\n                    )\n                })}\n                <button onClick={()=>onPostOrder(items)}  className=\"cart__btn\">To order</button>\n\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({items,orderPostState})=>{\n    return {items,\n        orderPostState}\n}\nconst mapDithpetchToProps = {\n    deleteFromCart,\n    successPostOrderFromCart,\n    errorPostOrderFromCart\n}\n\nexport default WithRestoService()(connect(mapStateToProps, mapDithpetchToProps)(CartTable));","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable/>\n        </div>\n    )\n}\n\nexport default CartPage;","import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport cartIcon from './shopping-cart-solid.svg';\nimport './app-header.scss';\n\nconst AppHeader = ({total}) => {\n    return (\n        <header className=\"header\">\n            <Link className=\"header__link\" to=\"/menu\">\n                Menu\n            </Link>\n            <Link className=\"header__link\" to=\"/cart\">\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {total} $\n            </Link>\n        </header>\n    )\n};\n\nexport default AppHeader;","import App from './app';\n\nexport default App;","import React from 'react';\nimport {MainPage, CartPage} from '../pages';\nimport AppHeader from '../app-header';\nimport {Route, Switch} from 'react-router-dom'\nimport {connect} from 'react-redux';\n\n\nimport Background from './food-bg.jpg';\n\nconst App = ({total}) => {\n    return (\n        <div style={{background: `url(${Background}) center center/cover no-repeat`}} className=\"app\">\n            <AppHeader total={total}/>\n            <Switch>\n                <Route exact path={['/','/menu']}component ={MainPage}/>\n                <Route exact path='/cart'component ={CartPage}/>\n                <Route  exact component={MainPage}/>\n            </Switch>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = ({total})=>({total});\n\nexport default connect(mapStateToProps)(App);","\r\nconst initialState = {\r\n    menu: [],\r\n    loading: true,\r\n    error: false,\r\n    items:[],\r\n    total:0,\r\n    orderPostState: 'waitingForOrder'\r\n}\r\n\r\nconst reducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case 'MENU_LOADED':\r\n            return {\r\n                ...state,\r\n                menu: action.payload,\r\n                loading: false\r\n            }\r\n        case 'MENU_REQUESTED':\r\n        return {\r\n            ...state,\r\n            loading: true\r\n        }   \r\n        case 'MENU_ERROR':\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: true\r\n        }\r\n        case 'ITEM_ADD':\r\n            const indexA = state.items.findIndex((item)=> item.id===action.payload.id)\r\n            if(indexA<0){\r\n                action.payload.count = 1;\r\n                return {\r\n                    ...state,\r\n                    items: [...state.items, action.payload],\r\n                    total: state.total+action.payload.price\r\n                }\r\n            } else {\r\n                action.payload.count = state.items[indexA].count+1\r\n                return {\r\n                    ...state,\r\n                    items: [...state.items.slice(0,indexA),action.payload,...state.items.slice(indexA+1)],\r\n                    total: state.total+action.payload.price\r\n\r\n                }\r\n            }\r\n        case 'ITEM_REMOVE':\r\n            const  index = state.items.findIndex((item)=> item.id===action.payload);\r\n\r\n            if(index>=0){\r\n                state.items[index].count = state.items[index].count - 1\r\n                if(state.items[index].count<=0){\r\n                    return {\r\n                        ...state,\r\n                        items: [...state.items.slice(0,index),...state.items.slice(index+1)],\r\n                        total: state.total- state.items[index].price\r\n\r\n                    }\r\n                } else {\r\n                    return {...state,\r\n                        items: [...state.items.slice()],\r\n                        total: state.total- state.items[index].price\r\n\r\n                    };\r\n                        \r\n                }\r\n                \r\n            } else {\r\n                return state;\r\n            }\r\n        case 'SUCCESS_POST_ORDER_FROM_CART':\r\n        return {\r\n            ...state,\r\n            orderPostState: 'success'\r\n        }   \r\n        case 'ERROR_POST_ORDER_FROM_CART':\r\n        return {\r\n            ...state,\r\n            orderPostState: 'error'\r\n        } \r\n            \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import {createStore }  from 'redux'\r\nimport reduser from './reducers';\r\n\r\nconst store = createStore(reduser);\r\n\r\nexport default store;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Error from '../error';\n\nexport default class ErrorBoundry extends Component {\n\n    state= {\n        error: false\n    }\n\n    componentDidCatch() {\n        this.setState({error:true});\n    }\n    render() {\n       if(this.state.error) {\n           return <Error/>;\n       } else{\n           return this.props.children;\n       }\n    }\n}","\r\nexport default class RestoService {\r\n    // baseUrl= 'http://localhost:3000';\r\n    baseUrl= process.env.PUBLIC_URL +'/db.json';\r\n\r\n    async getMenuItem(){\r\n        // return await  this._getData(this.baseUrl + '/menu');\r\n        return await this._getData(this.baseUrl).then(res=>res.menu);\r\n\r\n    }\r\n    async postOrderFromCart(data){\r\n        return await  this._postData(this.baseUrl + '/order', data); \r\n    }\r\n\r\n    async _getData(url){\r\n        const res = await fetch(url);\r\n        if(!res.ok) {\r\n            console.error(`could not feth ${url}, status:${res.status}`)\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    async _postData(url, data){\r\n        const res = await fetch(url,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n        if(!res.ok) {\r\n            console.error(`could not feth ${url}, status:${res.status}`)\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport {Provider} from 'react-redux'\nimport store from './store';\nimport ErrorBoundry from './components/error-boundry';\nimport {BrowserRouter  as Router} from 'react-router-dom';\nimport RestoServiceContext from './components/resto-service-context';\nimport RestoService from './services/resto-service';\n\nimport './index.scss';\n\nconst restoService = new RestoService();\n\nReactDOM.render(\n    <Provider store={store}>\n            <ErrorBoundry>\n                <RestoServiceContext.Provider value={restoService}>            \n                    <Router>\n                            <App/>\n                    </Router>\n                </RestoServiceContext.Provider>\n            </ErrorBoundry>\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}